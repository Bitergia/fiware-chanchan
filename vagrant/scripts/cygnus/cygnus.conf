# Copyright 2014 Bitergium SLL
# 

#=============================================
# To be put in APACHE_FLUME_HOME/conf/cygnus.conf
#
# General configuration template explaining how to setup a sink of each of the available types (HDFS, CKAN, MySQL).

#=============================================
# The next tree fields set the sources, sinks and channels used by Cygnus. You could use different names than the
# ones suggested below, but in that case make sure you keep coherence in properties names along the configuration file.
# Regarding sinks, you can use multiple types at the same time; the only requirement is to provide a channel for each
# one of them (this example shows how to configure 3 sink types at the same time). Even, you can define more than one
# sink of the same type and sharing the channel in order to improve the performance (this is like having
# multi-threading).
cygnusagent.sources = http-source http-source-org1 http-source-org2
cygnusagent.sinks = ckan-sink ckan-sink-org1 ckan-sink-org2
cygnusagent.channels = ckan-channel ckan-channel-org1 ckan-channel-org2

#=============================================
# source configuration
# channel name where to write the notification events
cygnusagent.sources.http-source.channels = ckan-channel
# source class, must not be changed
cygnusagent.sources.http-source.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source.port = 5050
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source.handler = es.tid.fiware.fiwareconnectors.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source.handler.default_organization = bitergia
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source.handler.management_port = 8081
# Source interceptors, do not change
cygnusagent.sources.http-source.interceptors = ts de
# Timestamp interceptor, do not change
cygnusagent.sources.http-source.interceptors.ts.type = timestamp
# Destination extractor interceptor, do not change
cygnusagent.sources.http-source.interceptors.de.type = es.tid.fiware.fiwareconnectors.cygnus.interceptors.DestinationExtractor$Builder
# Matching table for the destination extractor interceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source.interceptors.de.matching_table = /usr/cygnus/conf/matching_table.conf

#=============================================
# source configuration: ORG1
# channel name where to write the notification events
cygnusagent.sources.http-source-org1.channels = ckan-channel-org1
# source class, must not be changed
cygnusagent.sources.http-source-org1.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source-org1.port = 5001
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source-org1.handler = es.tid.fiware.fiwareconnectors.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source-org1.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source-org1.handler.default_organization = org1
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source-org1.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source-org1.handler.management_port = 5011
# Source interceptors, do not change
cygnusagent.sources.http-source-org1.interceptors = ts de
# Timestamp interceptor, do not change
cygnusagent.sources.http-source-org1.interceptors.ts.type = timestamp
# Destination extractor interceptor, do not change
cygnusagent.sources.http-source-org1.interceptors.de.type = es.tid.fiware.fiwareconnectors.cygnus.interceptors.DestinationExtractor$Builder
# Matching table for the destination extractor interceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source-org1.interceptors.de.matching_table = /usr/cygnus/conf/matching_table.conf

#=============================================
# source configuration: ORG2
# channel name where to write the notification events
cygnusagent.sources.http-source-org2.channels = ckan-channel-org2
# source class, must not be changed
cygnusagent.sources.http-source-org2.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source-org2.port = 5002
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source-org2.handler = es.tid.fiware.fiwareconnectors.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source-org2.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source-org2.handler.default_organization = org2
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source-org2.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source-org2.handler.management_port = 5012
# Source interceptors, do not change
cygnusagent.sources.http-source-org2.interceptors = ts de
# Timestamp interceptor, do not change
cygnusagent.sources.http-source-org2.interceptors.ts.type = timestamp
# Destination extractor interceptor, do not change
cygnusagent.sources.http-source-org2.interceptors.de.type = es.tid.fiware.fiwareconnectors.cygnus.interceptors.DestinationExtractor$Builder
# Matching table for the destination extractor interceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source-org2.interceptors.de.matching_table = /usr/cygnus/conf/matching_table.conf

# ============================================
# OrionCKANSink configuration
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink.channel = ckan-channel
# sink class, must not be changed
cygnusagent.sinks.ckan-sink.type = es.tid.fiware.fiwareconnectors.cygnus.sinks.OrionCKANSink
# the CKAN API key to use
cygnusagent.sinks.ckan-sink.api_key = 44f762b2-978a-40ca-9dfc-1a8ec8855599
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
cygnusagent.sinks.ckan-sink.default_dataset = bitergia_package1
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink.orion_url = http://localhost:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink.attr_persistence = row

# ============================================
# OrionCKANSink configuration: org1
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink-org1.channel = ckan-channel-org1
# sink class, must not be changed
cygnusagent.sinks.ckan-sink-org1.type = es.tid.fiware.fiwareconnectors.cygnus.sinks.OrionCKANSink
# the CKAN API key to use
cygnusagent.sinks.ckan-sink-org1.api_key = 44f762b2-978a-40ca-9dfc-1a8ec8855599
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-org1.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-org1.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
cygnusagent.sinks.ckan-sink-org1.default_dataset = room_dataset
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink-org1.orion_url = http://localhost:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink-org1.attr_persistence = row

# ============================================
# OrionCKANSink configuration: org2
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink-org2.channel = ckan-channel-org2
# sink class, must not be changed
cygnusagent.sinks.ckan-sink-org2.type = es.tid.fiware.fiwareconnectors.cygnus.sinks.OrionCKANSink
# the CKAN API key to use
cygnusagent.sinks.ckan-sink-org2.api_key = 44f762b2-978a-40ca-9dfc-1a8ec8855599
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-org2.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-org2.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
cygnusagent.sinks.ckan-sink-org2.default_dataset = room_dataset
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink-org2.orion_url = http://localhost:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink-org2.attr_persistence = row

#=============================================
# ckan-channel configuration
# channel type (must not be changed)
cygnusagent.channels.ckan-channel.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel.transactionCapacity = 100

#=============================================
# ckan-channel configuration: ORG1
# channel type (must not be changed)
cygnusagent.channels.ckan-channel-org1.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel-org1.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel-org1.transactionCapacity = 100

#=============================================
# ckan-channel configuration: ORG2
# channel type (must not be changed)
cygnusagent.channels.ckan-channel-org2.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel-org2.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel-org2.transactionCapacity = 100
