# Copyright 2014 Bitergium SLL
# 

#=============================================
# To be put in APACHE_FLUME_HOME/conf/cygnus.conf
#
# General configuration template explaining how to setup a sink of each of the available types (HDFS, CKAN, MySQL).

#=============================================
# The next tree fields set the sources, sinks and channels used by Cygnus. You could use different names than the
# ones suggested below, but in that case make sure you keep coherence in properties names along the configuration file.
# Regarding sinks, you can use multiple types at the same time; the only requirement is to provide a channel for each
# one of them (this example shows how to configure 3 sink types at the same time). Even, you can define more than one
# sink of the same type and sharing the channel in order to improve the performance (this is like having
# multi-threading).
cygnusagent.sources = http-source http-source-org1 http-source-org2 http-source-thing
cygnusagent.sinks = ckan-sink ckan-sink-org1 ckan-sink-org2 mysql-sink-thing hdfs-sink
cygnusagent.channels = ckan-channel ckan-channel-org1 ckan-channel-org2 mysql-channel-thing hdfs-channel

#=============================================
# source configuration
# channel name where to write the notification events
cygnusagent.sources.http-source.channels = ckan-channel
# source class, must not be changed
cygnusagent.sources.http-source.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source.port = 5050
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source.handler = com.telefonica.iot.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source.handler.default_organization = santander
# Default service path (service path semantic depends on the persistence sink)
# cygnusagent.sources.http-source.handler.default_service_path = def_servpath
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source.handler.management_port = 8081
# Source interceptors, do not change
cygnusagent.sources.http-source.interceptors = ts gi
# Timestamp interceptor, do not change
cygnusagent.sources.http-source.interceptors.ts.type = timestamp
# GroupinInterceptor, do not change
cygnusagent.sources.http-source.interceptors.gi.type = com.telefonica.iot.cygnus.interceptors.GroupingInterceptor$Builder
# Grouping rules for the GroupingInterceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source.interceptors.gi.grouping_rules_conf_file = /usr/cygnus/conf/grouping_rules.conf

#=============================================
# source configuration: ORG1
# channel name where to write the notification events
cygnusagent.sources.http-source-org1.channels = ckan-channel-org1 hdfs-channel
# source class, must not be changed
cygnusagent.sources.http-source-org1.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source-org1.port = 5001
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source-org1.handler = com.telefonica.iot.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source-org1.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
# cygnusagent.sources.http-source-org1.handler.default_organization = orga_a
cygnusagent.sources.http-source-org1.handler.default_service = organiz_a
cygnusagent.sources.http-source-org1.handler.default_service_path = room
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source-org1.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source-org1.handler.management_port = 5011
# Source interceptors, do not change
cygnusagent.sources.http-source-org1.interceptors = ts gi
# Timestamp interceptor, do not change
cygnusagent.sources.http-source-org1.interceptors.ts.type = timestamp
# GroupinInterceptor, do not change
cygnusagent.sources.http-source-org1.interceptors.gi.type = com.telefonica.iot.cygnus.interceptors.GroupingInterceptor$Builder
# Grouping rules for the GroupingInterceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source-org1.interceptors.gi.grouping_rules_conf_file = /usr/cygnus/conf/grouping_rules.conf

#=============================================
# source configuration: ORG2
# channel name where to write the notification events
cygnusagent.sources.http-source-org2.channels = ckan-channel-org2
# source class, must not be changed
cygnusagent.sources.http-source-org2.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source-org2.port = 5002
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source-org2.handler = com.telefonica.iot.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source-org2.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source-org2.handler.default_organization = orga_b
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source-org2.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source-org2.handler.management_port = 5012
# Source interceptors, do not change
cygnusagent.sources.http-source-org2.interceptors = ts gi
# Timestamp interceptor, do not change
cygnusagent.sources.http-source-org2.interceptors.ts.type = timestamp
# GroupinInterceptor, do not change
cygnusagent.sources.http-source-org2.interceptors.gi.type = com.telefonica.iot.cygnus.interceptors.GroupingInterceptor$Builder
# Grouping rules for the GroupingInterceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source-org2.interceptors.gi.grouping_rules_conf_file = /usr/cygnus/conf/grouping_rules.conf

#=============================================
# source configuration: Thing
# channel name where to write the notification events
cygnusagent.sources.http-source-thing.channels = mysql-channel-thing
# source class, must not be changed
cygnusagent.sources.http-source-thing.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source-thing.port = 6001
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source-thing.handler = com.telefonica.iot.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source-thing.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source-thing.handler.default_organization = thing
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source-thing.handler.events_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source-thing.handler.management_port = 6012
# Source interceptors, do not change
cygnusagent.sources.http-source-thing.interceptors = ts gi
# Timestamp interceptor, do not change
cygnusagent.sources.http-source-thing.interceptors.ts.type = timestamp
# GroupinInterceptor, do not change
cygnusagent.sources.http-source-thing.interceptors.gi.type = com.telefonica.iot.cygnus.interceptors.GroupingInterceptor$Builder
# Grouping rules for the GroupingInterceptor, put the right absolute path to the file if necessary
# See the doc/design/interceptors document for more details
cygnusagent.sources.http-source-thing.interceptors.gi.grouping_rules_conf_file = /usr/cygnus/conf/grouping_rules.conf

# ============================================
# OrionCKANSink configuration
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink.channel = ckan-channel
# sink class, must not be changed
cygnusagent.sinks.ckan-sink.type = com.telefonica.iot.cygnus.sinks.OrionCKANSink
# the CKAN API key to use
cygnusagent.sinks.ckan-sink.api_key = 648b4204-feb6-4f5c-b9c4-813c48319669
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
cygnusagent.sinks.ckan-sink.default_dataset = sound_level_meter
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink.orion_url = http://localhost:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink.attr_persistence = row

# ============================================
# OrionCKANSink configuration: org1
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink-org1.channel = ckan-channel-org1
# sink class, must not be changed
cygnusagent.sinks.ckan-sink-org1.type = com.telefonica.iot.cygnus.sinks.OrionCKANSink
# the CKAN API key to use
cygnusagent.sinks.ckan-sink-org1.api_key = 648b4204-feb6-4f5c-b9c4-813c48319669
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-org1.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-org1.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
# cygnusagent.sinks.ckan-sink-org1.default_dataset = room
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink-org1.orion_url = http://localhost:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink-org1.attr_persistence = row
# enable SSL for secure Http transportation; 'true' or 'false'
cygnusagent.sinks.ckan-sink-org1.ssl = false

# ============================================
# OrionCKANSink configuration: org2
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink-org2.channel = ckan-channel-org2
# sink class, must not be changed
cygnusagent.sinks.ckan-sink-org2.type = com.telefonica.iot.cygnus.sinks.OrionCKANSink
# the CKAN API key to use
cygnusagent.sinks.ckan-sink-org2.api_key = 648b4204-feb6-4f5c-b9c4-813c48319669
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-org2.ckan_host = demo.ckan.org
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink-org2.ckan_port = 80
# the dasaset (i.e. package) name to use within the organization. Must be purely lowercase alphanumeric (ascii)
# characters plus "-" and "_" acording to CKAN limitations. The default_dataset is prefixed by organization name
# to ensure uniqueness (see http://stackoverflow.com/questions/24203808/is-it-possible-to-create-packages-with-the-same-name-in-different-organizations)
cygnusagent.sinks.ckan-sink-org2.default_dataset = room
# Orion URL used to compose the resource URL with the convenience operation URL to query it
cygnusagent.sinks.ckan-sink-org2.orion_url = http://localhost:1026
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.ckan-sink-org2.attr_persistence = row

# ============================================
# OrionCKANSink configuration: thing
# channel name from where to read notification events
cygnusagent.sinks.mysql-sink-thing.channel = mysql-channel-thing
# sink class, must not be changed
cygnusagent.sinks.mysql-sink-thing.type = com.telefonica.iot.cygnus.sinks.OrionMySQLSink
cygnusagent.sinks.mysql-sink-thing.mysql_host=dbserver
cygnusagent.sinks.mysql-sink-thing.mysql_port=3306
cygnusagent.sinks.mysql-sink-thing.mysql_username=root
cygnusagent.sinks.mysql-sink-thing.mysql_password=rootpw
cygnusagent.sinks.mysql-sink-thing.attr_persistence=row

# ============================================
# OrionHDFSSink configuration
# channel name from where to read notification events
cygnusagent.sinks.hdfs-sink.channel = hdfs-channel
# sink class, must not be changed
cygnusagent.sinks.hdfs-sink.type = com.telefonica.iot.cygnus.sinks.OrionHDFSSink
# true if the grouping feature is enabled for this sink, false otherwise
cygnusagent.sinks.hdfs-sink.enable_grouping = false
# Comma-separated list of FQDN/IP address regarding the HDFS Namenode endpoints
# If you are using Kerberos authentication, then the usage of FQDNs instead of IP addresses is mandatory
cygnusagent.sinks.hdfs-sink.hdfs_host = cosmos.lab.fiware.org
# port of the HDFS service listening for persistence operations; 14000 for httpfs, 50070 for webhdfs
cygnusagent.sinks.hdfs-sink.hdfs_port = 14000
# username allowed to write in HDFS
cygnusagent.sinks.hdfs-sink.hdfs_username = acs
# password for the above username; this is only required for Hive authentication
cygnusagent.sinks.hdfs-sink.hdfs_password = cosmos4acs
# OAuth2 token for HDFS authentication
cygnusagent.sinks.hdfs-sink.oauth2_token = oDnVw3rYvJHZ1vY5eHPewiGyo2LGlN
# how the attributes are stored, available formats are json-row, json-column, csv-row and csv-column
cygnusagent.sinks.hdfs-sink.file_format = json-column
# Hive server version (1 or 2)
cygnusagent.sinks.hdfs-sink.hive_server_version = 2
# Hive FQDN/IP address of the Hive server
cygnusagent.sinks.hdfs-sink.hive_host = cosmos.lab.fiware.org
# Hive port for Hive external table provisioning
cygnusagent.sinks.hdfs-sink.hive_port = 10000
# Kerberos-based authentication enabling
cygnusagent.sinks.hdfs-sink.krb5_auth = false
# Batch processing, improves the performace a lot
agentname.sinks.hdfs-sink.batch_size=100
# agentname.sinks.hdfs-sink.batch_timeout=30
agentname.sinks.hdfs-sink.batch_timeout=1

#=============================================
# ckan-channel configuration
# channel type (must not be changed)
cygnusagent.channels.ckan-channel.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel.transactionCapacity = 100

#=============================================
# ckan-channel configuration: ORG1
# channel type (must not be changed)
cygnusagent.channels.ckan-channel-org1.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel-org1.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel-org1.transactionCapacity = 100

#=============================================
# ckan-channel configuration: ORG2
# channel type (must not be changed)
cygnusagent.channels.ckan-channel-org2.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel-org2.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel-org2.transactionCapacity = 100

#=============================================
# ckan-channel configuration: thing
# channel type (must not be changed)
cygnusagent.channels.mysql-channel-thing.type = memory
# capacity of the channel
cygnusagent.channels.mysql-channel-thing.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.mysql-channel-thing.transactionCapacity = 100

#=============================================
# ckan-channel configuration: HDFS
# channel type (must not be changed)
cygnusagent.channels.hdfs-channel.type = memory
# capacity of the channel
cygnusagent.channels.hdfs-channel.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.hdfs-channel.transactionCapacity = 100
